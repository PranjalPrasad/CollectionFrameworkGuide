import java.util.*;

class TreeSetEx 
{
    public static void main(String[] args) 
    {
        //  to create a tree set, add some colors (strings) and print out the tree set.
       TreeSet<String> ts=new TreeSet<String>();
       ts.add("Red");
       ts.add("green");
       ts.add("orange");
       ts.add("white");
       ts.add("Black");
        System.out.println("TreeSet is: " +ts);
        
        // iterate through all elements of the tree set
        System.out.println("iterate through all elments in the treeset");
         System.out.println("Elements in a treeset are: ");
        for(String str:ts)
        {
            System.out.println(str);
        }
        
        
        //  to add all the elements of a specified tree set to another tree set. 
         TreeSet<String> ts1=new TreeSet<String>();
         ts1.add("Red");
         ts1.add("green");
         ts1.add("orange");
         ts1.add("yellow");
         ts1.add("pink");
         System.out.println("TreeSet2 is: " +ts1);
         ts.addAll(ts1);
         System.out.println("TreeSet1: "+ts);
       
       
    //   to create a reverse order view of the elements contained in a given tree set.
    Iterator it=ts.descendingIterator();
     System.out.println("Elements in reverse order:");
     while(it.hasNext())
     {
         System.out.println(it.next());
     }
    
    // Get First and last element in a treeset
    Object first_ele=ts.first();
    System.out.println("First Element in a treeset is:" + first_ele);
     Object last_ele=ts.last();
    System.out.println("last Element in a treeset is:" + last_ele);
    
    
    // clone a tree set list to another tree set. 
    
    System.out.println("TreeSet clone:");
    TreeSet<String> ts2=(TreeSet<String>)ts.clone();
    System.out.println("cloned tree list: "+ts);
    
    
    // get the number of elements in a tree set.
    System.out.println("Size of the tree set: "+ts.size());
    
    
    // compare two tree sets. 
    TreeSet<String> res=new TreeSet<String>();
    for(String s1:ts1)
    {
        System.out.println(ts.contains(s1) ? "YES" : "No");
    }
    
    
    // find numbers less than 7 in a tree set. 
        TreeSet <Integer>tn = new TreeSet<Integer>();
        
        TreeSet <Integer>tn1 = new TreeSet<Integer>();
        tn.add(1);
        tn.add(2);
        tn.add(3);
        tn.add(5);
        tn.add(6);
        tn.add(7);
        tn.add(8);
        tn.add(9);
        tn.add(10);
        tn.add(34);
        tn.add(99);
        
        tn1=(TreeSet)tn.headSet(7); 
        
        Iterator iterator;
        iterator=tn1.iterator();
        
        System.out.println("Tree set Data: ");
        while(iterator.hasNext())
        {
            System.out.println(iterator.next()+" ");
        }
        
        
        // get the element in a tree set which is greater than or equal to the given element. 
        TreeSet <Integer>tr = new TreeSet<Integer>();
        TreeSet <Integer>tnn = new TreeSet<Integer>();
        tr.add(10);
        tr.add(22);
        tr.add(36);
        tr.add(25);
        tr.add(16);
        tr.add(70);
        tr.add(82);
        tr.add(89);
        tr.add(14);
        System.out.println("Greater than or equal to 86 : "+tr.ceiling(86));
        System.out.println("Greater than or equal to 29 : "+tr.ceiling(29));
        
        
        // tree set less than or equal to the given element 
        System.out.println("Less than or equal to 86 : "+tr.floor(86));
        System.out.println("Less than or equal to 29 : "+tr.floor(29));
        
        
        //  get the element in a tree set strictly greater than or equal to the given element. 
        System.out.println("Strictly greater than 76 : "+tr.higher(76));
        System.out.println("Strictly greater than 31 : "+tr.higher(31));
        
        
        // get an element in a tree set that has a lower value than the given element. 
        System.out.println("Strictly less than 69 : "+tr.lower(69));
        System.out.println("Strictly less than 12 : "+tr.lower(12));
        

       //  retrieve and remove the first element of a tree set.
       System.out.println("Removes the first or lowest element: "+tr.pollFirst());
       System.out.println("Tree set after removing first element: "+tr);
    
    
       //retrieve and remove the last element of a tree set.
       System.out.println("Removes the last element: "+tr.pollLast());
       System.out.println("Tree set after removing last element: "+tr);
       
       
       // remove a given element from a tree set
       System.out.println("Removes 70 from the list: "+tr.remove(70));
       System.out.println("Tree set after removing last element: "+tr);
    
    

    
    }
}
